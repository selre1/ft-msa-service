server:
  port: 0

spring:
  application:
     name: user-service
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true # 외부에서 접속허용하겠다
      path: /h2-console
#    datasource:
#      url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
#      driver-class-name: org.h2.Driver
#      username: sa
#      password:
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
  cloud:
    config:
      name: user-service #config 서버의 yml 이름을 명시함
    openfeign:
      micrometer:
        enabled: true
  config:
    import: optional:configserver:http://175.116.181.23:8888
#  profiles:
#    active: dev

eureka:
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

management:
  tracing:
    sampling:
      probability: 1.0
    propagation:
      type: b3
  zipkin:
    tracing:
      endpoint: "http://localhost:9411/api/v2/spans"
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, busrefresh
#token:
#  expiration_time: 86400000 # 24시간
#  secret:  c3ByaW5nYm9vdC1qd3QtdHV0b3JpYWwtc3ByaW5nYm9vdC1qd3QtdHV0b3JpYWwtc3ByaW5nYm9vdC1qd3QtdHV0b3JpYWwK
logging:
  level:
    com.example.userservice.clint: debug
  pattern:
    level: "%5p [%X{traceId:-},%X{spanId:-}]"